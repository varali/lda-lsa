#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
set.seed(0)
lda <- LDA(testmatrix, k) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
set.seed(0)
lda <- LDA(testmatrix, k) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
set.seed(0)
lda <- LDA(testmatrix, k) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
help(LDA)
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = 0)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = 0)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = 0)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = 0, nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = 0, nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = 0, nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = seq(1, 10), nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = seq(1, 10), nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = seq(1, 10), nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = seq(1, 10), nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = seq(1, 10), nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# http://www.rtexttools.com/blog/getting-started-with-latent-dirichlet-allocation-using-rtexttools-topicmodels
library(RTextTools)
library(topicmodels)
library(ggplot2)
testdata <- apply(read.table("/Users/cody/Documents/text.csv", header=FALSE, sep=","), 2, as.character)
testdata <- unname(testdata)
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
df <- data.frame(testdata, view, stringsAsFactors = FALSE)
df
testmatrix <- create_matrix(testdata, language="english", removeNumbers=TRUE, stemWords=TRUE)
testmatrix
k <- 3
lda <- LDA(testmatrix, k, control = list(seed = seq(1, 10), nstart = 10)) #perform lda with 3 topics
str(lda)
terms(lda)
topics(lda)
str(topics(lda))
# crc create a distance matrix
dist.mat.lda <- dist(t(as.matrix(testmatrix))) #crc as.textmatrix(lda))) # compute distance matrix
#dist.mat.lda # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lda, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# Created with http://meefen.github.io/blog/2013/03/11/analyze-text-similarity-in-r-latent-semantic-analysis-and-multidimentional-scaling/
library(tm)
library(ggplot2)
library(lsa)
text <- c("transporting food by cars will cause global warming. so we should go local.",
"we should try to convince our parents to stop using cars because it will cause global warming.",
"some food, such as mongo, requires a warm weather to grow. so they have to be transported to canada.",
"a typical electronic circuit can be built with a battery, a bulb, and a switch.",
"electricity flows from batteries to the bulb, just like water flows through a tube.",
"batteries have chemical energe in it. then electrons flow through a bulb to light it up.",
"birds can fly because they have feathers and they are light.",
"why can some birds like pigeons fly while some others like chickens cannot?",
#"dogs bark")
"feathers are important for birds to fly. if the feathers on a bird's wings are removed, this bird cannot fly.")
text
setwd("/Users/cody/Documents")
testtext <- apply(read.table("text.csv", header=FALSE, sep=","), 2, as.character)
testtext
testtext <- unname(testtext)
testtext
# for 4 topics, 12 rows
#view <- factor(rep(c("topic 1", "topic 2", "topic 3", "topic 4"), each = 3))
# for 3 topics, 9 rows
view <- factor(rep(c("topic 1", "topic 2", "topic 3"), each = 3))
#df <- read.table("text.csv", header=FALSE, sep=",")
df <- data.frame(testtext, view, stringsAsFactors = FALSE)
df
# Stemming, removing stop words
#corpus <- Corpus(VectorSource(df$text)) #crc using text
corpus <- Corpus(VectorSource(df$testtext))
#corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("english")))
corpus <- tm_map(corpus, stemDocument, language = "english")
corpus
# Create a document term matrix
td.mat <- as.matrix(TermDocumentMatrix(corpus))
td.mat
#crc 7-12 dist.mat <- dist(t(as.matrix(td.mat)))
#crc 7-12 dist.mat  # check distance matrix
# MDS
# for 4 topics, 12 rows
#fit <- cmdscale(dist.mat, eig = TRUE, k = 3)
# for 3 topics, 9 rows
#crc 7-12 fit <- cmdscale(dist.mat, eig = TRUE, k = 2) #crc was 2
# for 4 topics, 12 rows
#points <- data.frame(x = fit$points[, 1], y = fit$points[, 3])
# for 3 topics, 9 rows
#crc 7-12 points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
#crc 7-12 ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
# MDS with LSA
td.mat.lsa <- lw_bintf(td.mat) * gw_idf(td.mat) # weighting
lsaSpace <- lsa(td.mat.lsa) # create LSA space
dist.mat.lsa <- dist(t(as.textmatrix(lsaSpace))) # compute distance matrix
dist.mat.lsa # check distance matrix
# MDS
fit <- cmdscale(dist.mat.lsa, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y, color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
#library(scatterplot3d)
#fit <- cmdscale(dist.mat.lsa, eig = TRUE, k = 3)
#colors <- rep(c("blue", "green", "red"), each = 3)
#scatterplot3d(fit$points[, 1], fit$points[, 2], fit$points[, 3], color = colors, pch = 16, main = "Semantic Space Scaled to 3D", xlab = "x", ylab = "y", zlab = "z", type = "h")
as.character(view)
view
dim(td.mat)
lsaSpace$tk
as.textmatrix(lsaSpace)
as.matrix(lsaSpace)
help(textmatrix)
as.textmatrix(lsaSpace)$matrix
as.textmatrix(lsaSpace)
tm <- as.textmatrix(lsaSpace)
as.matrix(tm)
as.matrix(tm)$matrix
kmeans(tm, 3)
kmeans(t(tm) , 3)
kmeans(t(tm) , 3)$cluster
help(kmeans)
set.seed(0)
kmeans(t(tm) , 3)$cluster
kmeans(t(tm) , 3)$cluster
set.seed(0)
kmeans(t(tm) , 3)$cluster
set.seed(0)
kmeans(t(tm) , 3)$cluster
set.seed(0)
kmeans(t(tm) , 3)$cluster
set.seed(1)
kmeans(t(tm) , 3)$cluster
set.seed(1)
kmeans(t(tm) , 3)$cluster
set.seed(1)
kmeans(t(tm) , 3)$cluster
kmeans(cmdscale(dist.mat.lsa, eig = TRUE, k = 2)$points, 3)$cluster
kmeans(cmdscale(dist.mat.lsa, eig = TRUE, k = 3)$points, 3)$cluster
dim(fit$points)
savehistory("~/Desktop/mtg.Rhistory")
